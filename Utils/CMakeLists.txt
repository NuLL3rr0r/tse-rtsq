#  (The MIT License)
#
#  Copyright (c) 2016 Mohammad S. Babaei
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in
#  all copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#  THE SOFTWARE.


IF ( BUILD_UTILS_GEOIP_UPDATER )
    SET ( GEOIP_UPDATER_SOURCE_FILES geoip-updater.cpp )
    SET ( GEOIP_UPDATER_BIN_FILE "${UTILS_GEOIP_UPDATER_BIN_NAME}" )

    ADD_EXECUTABLE ( ${GEOIP_UPDATER_BIN_FILE} ${GEOIP_UPDATER_SOURCE_FILES} )

    FOREACH ( FLAG ${CXX11_FEATURE_LIST} )
        SET_PROPERTY ( TARGET ${GEOIP_UPDATER_BIN_FILE}
            APPEND PROPERTY COMPILE_DEFINITIONS ${FLAG} )
    ENDFOREACH ( FLAG ${CXX11_FEATURE_LIST} )

    TARGET_LINK_LIBRARIES ( ${GEOIP_UPDATER_BIN_FILE}
        ${CORELIB_BIN_NAME}
        ${Boost_LIBRARIES}
    )

    IF ( DEFINED UTILS_DEFINES )
        SET_PROPERTY ( TARGET ${GEOIP_UPDATER_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "${UTILS_DEFINES}" )
    ENDIF (  )

    IF ( DEFINED GEO_LITE_COUNTRY_DB_URL )
        SET_PROPERTY ( TARGET ${GEOIP_UPDATER_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "GEO_LITE_COUNTRY_DB_URL=\"${GEO_LITE_COUNTRY_DB_URL}\"" )
    ENDIF (  )

    IF ( DEFINED GEO_LITE_CITY_DB_URL )
        SET_PROPERTY ( TARGET ${GEOIP_UPDATER_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "GEO_LITE_CITY_DB_URL=\"${GEO_LITE_CITY_DB_URL}\"" )
    ENDIF (  )

    GET_PROPERTY( GEOIP_UPDATER_EXECUTABLE TARGET ${GEOIP_UPDATER_BIN_FILE} PROPERTY LOCATION )

    IF ( CXX_GCC AND GCC_STRIP_EXECUTABLES )
        ADD_CUSTOM_COMMAND ( TARGET ${GEOIP_UPDATER_BIN_FILE}
            POST_BUILD
            COMMAND strip ${GEOIP_UPDATER_EXECUTABLE}
            COMMAND strip -R.comment ${GEOIP_UPDATER_EXECUTABLE}
            WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
        )
    ENDIF (  )


    IF ( DEFINED APP_ROOT_DIR )
        EXECUTE_PROCESS (
            COMMAND ${CMAKE_COMMAND} -E make_directory "${APP_ROOT_DIR}/bin"
        )

        INSTALL ( FILES
            "${CMAKE_CURRENT_BINARY_DIR}/${GEOIP_UPDATER_BIN_FILE}"
            DESTINATION "${APP_ROOT_DIR}/bin"
            PERMISSIONS
            OWNER_READ OWNER_EXECUTE
            GROUP_READ GROUP_EXECUTE
            WORLD_READ WORLD_EXECUTE
        )
    ENDIF (  )
ENDIF (  )


IF ( BUILD_UTILS_SPAWN_FASTCGI )
    SET ( SPAWN_FASTCGI_SOURCE_FILES spawn-fastcgi.cpp )
    SET ( SPAWN_FASTCGI_BIN_FILE "${UTILS_SPAWN_FASTCGI_BIN_NAME}" )

    ADD_EXECUTABLE ( ${SPAWN_FASTCGI_BIN_FILE} ${SPAWN_FASTCGI_SOURCE_FILES} )

    FOREACH ( FLAG ${CXX11_FEATURE_LIST} )
        SET_PROPERTY ( TARGET ${SPAWN_FASTCGI_BIN_FILE}
            APPEND PROPERTY COMPILE_DEFINITIONS ${FLAG} )
    ENDFOREACH ( FLAG ${CXX11_FEATURE_LIST} )

    TARGET_LINK_LIBRARIES ( ${SPAWN_FASTCGI_BIN_FILE}
        ${CORELIB_BIN_NAME}
        ${Boost_LIBRARIES}
    )

    IF ( DEFINED UTILS_DEFINES )
        SET_PROPERTY ( TARGET ${SPAWN_FASTCGI_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "${UTILS_DEFINES}" )
    ENDIF (  )

    GET_PROPERTY( SPAWN_FASTCGI_EXECUTABLE TARGET ${SPAWN_FASTCGI_BIN_FILE} PROPERTY LOCATION )

    IF ( CXX_GCC AND GCC_STRIP_EXECUTABLES )
        ADD_CUSTOM_COMMAND ( TARGET ${SPAWN_FASTCGI_BIN_FILE}
            POST_BUILD
            COMMAND strip ${SPAWN_FASTCGI_EXECUTABLE}
            COMMAND strip -R.comment ${SPAWN_FASTCGI_EXECUTABLE}
            WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
        )
    ENDIF (  )

    IF ( DEFINED APP_ROOT_DIR )
        EXECUTE_PROCESS (
            COMMAND ${CMAKE_COMMAND} -E make_directory "${APP_ROOT_DIR}/bin"
        )

        INSTALL ( FILES
            "${CMAKE_CURRENT_BINARY_DIR}/${SPAWN_FASTCGI_BIN_FILE}"
            DESTINATION "${APP_ROOT_DIR}/bin"
            PERMISSIONS
            OWNER_READ OWNER_EXECUTE
            GROUP_READ GROUP_EXECUTE
            WORLD_READ WORLD_EXECUTE
        )
    ENDIF (  )
ENDIF (  )


IF ( BUILD_UTILS_SPAWN_WTHTTPD )
    SET ( SPAWN_WTHTTPD_SOURCE_FILES spawn-wthttpd.cpp )
    SET ( SPAWN_WTHTTPD_BIN_FILE "${UTILS_SPAWN_WTHTTPD_BIN_NAME}" )

    ADD_EXECUTABLE ( ${SPAWN_WTHTTPD_BIN_FILE} ${SPAWN_WTHTTPD_SOURCE_FILES} )

    FOREACH ( FLAG ${CXX11_FEATURE_LIST} )
        SET_PROPERTY ( TARGET ${SPAWN_WTHTTPD_BIN_FILE}
            APPEND PROPERTY COMPILE_DEFINITIONS ${FLAG} )
    ENDFOREACH ( FLAG ${CXX11_FEATURE_LIST} )

    TARGET_LINK_LIBRARIES ( ${SPAWN_WTHTTPD_BIN_FILE}
        ${CORELIB_BIN_NAME}
        ${Boost_LIBRARIES}
    )

    IF ( DEFINED UTILS_DEFINES )
        SET_PROPERTY ( TARGET ${SPAWN_WTHTTPD_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "${UTILS_DEFINES}" )
    ENDIF (  )

    GET_PROPERTY( SPAWN_WTHTTPD_EXECUTABLE TARGET ${SPAWN_WTHTTPD_BIN_FILE} PROPERTY LOCATION )

    IF ( CXX_GCC AND GCC_STRIP_EXECUTABLES )
        ADD_CUSTOM_COMMAND ( TARGET ${SPAWN_WTHTTPD_BIN_FILE}
            POST_BUILD
            COMMAND strip ${SPAWN_WTHTTPD_EXECUTABLE}
            COMMAND strip -R.comment ${SPAWN_WTHTTPD_EXECUTABLE}
            WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
        )
    ENDIF (  )


    IF ( DEFINED APP_ROOT_DIR )
        EXECUTE_PROCESS (
            COMMAND ${CMAKE_COMMAND} -E make_directory "${APP_ROOT_DIR}/bin"
        )

        INSTALL ( FILES
            "${CMAKE_CURRENT_BINARY_DIR}/${SPAWN_WTHTTPD_BIN_FILE}"
            DESTINATION "${APP_ROOT_DIR}/bin"
            PERMISSIONS
            OWNER_READ OWNER_EXECUTE
            GROUP_READ GROUP_EXECUTE
            WORLD_READ WORLD_EXECUTE
        )
    ENDIF (  )
ENDIF (  )

